(Legend: ++ done, -- to do, >> to revisit / something is in limbo because of the merge)

Bugs

++ fix overlap at meeting
++ tighten SVGSurface (left/right margins)
>> xseparation is best fixed to points rather than automated from max_bundle
>> bottom margin also left to user
++ font size: from user, or pegged to the fixed xseparation
++ colours automatic from a palette
++ draw each cluster centered on its row (rather than top-aligned)
-- layout suboptimal vertically
-- draw a bundle incoming into root clusters

Method

>> automated cluster height
++ automated ymargin
>> automated xseparation (undone though, best left controllable)
++ automated yseparation
++ start/end timestamp for separate block plotting
++ move user parameters to initialisation: font_size, xseparation, etc.
>> xmargin = font_size

++ aggregate time as unconditional union of contacts (weak aggregation)
++ aggregate time only over significant, reoccurring links (strong aggregation)
++ respect absolute time, all sensed time blocks shown
++ annotate time on the x axis
>> annotate bundle sizes (at changepoints)

++ metadata as colour

-- complexity metric: temporal motifs (split+merge, stable comm.)
-- emphasise stable communities on the plot
-- automatically set parameters (strength, new_period, minimum_connections_size) to discover communities
      plot complexity metric vs. parameters (multi-objective), then choose
-- summarise stable community statistics _in time_: any emerging pattern?
-- map community events (merge, split) to story events; have the narrative write itself
   evaluate it with synthetic data w. ground truth!

Network types

++ visualise (largely) contiguous, fine-grained proximity data (human, animal contact)
   RFID contacts encode space-time contiguous locations (visualised knowing the time, not the space interval)
++ visualise sparse tempnets, e.g. emails, messages, bill sponsorship (regularised w. time aggregation)
-- visualise hypergraphs (straightforward)
-- visualise tempnets with edge duration, e.g. calls, badgers (straightforward)
-- visualise bipartite networks, e.g. bee-flower
-- visualise infection dynamics (SIR; follow all individuals)

Data

-- Physical proximity RFID/Zigbee/Bluetooth (Temporal Dyadic Networks)
      SocioPatterns (6 + 1..69 + 1): 
         + tij_pres_SFHH
         + tij_pres_LH10
         + tij_pres_InVS13 and 15
         + tij_pres_LyonSchool
         + tij_pres_Thiers13
         + listcontacts_2009_04_28/07_17
         + ht09_contact_list
         - Kenyan households (data within, aggregated per hour with duration)
      Copenhagen study (1)
         - bluetooth
      Dryad:
         - raccoon (aggregated per week with duration)
         - bumblebee 2 flowers
         - Ellwood badgers (have sites, duration)
      Reality Commons:
         - badge (Zigbee)
         - student dorm (Bluetooth)
         - reality mining city mobility (Bluetooth and cell tower)

-- Communication, collaboration, information (Temporal Dyadic or Hypergraphs)
      SNAP (4 + 1):
         + email EU x 4 depts. (directed -> undirected)
         + college msg. (directed -> undirected)
      Copenhagen study (2)
         + smses (directed -> undirected)
         - calls (directed -> undirected)
      A R Benson:
         - email-Enron (directed -> undirected)
         - tags-math-sx
         - threads-ask-ubuntu (directed -> undirected)
         - congress-bills

Comparison

++ sequence view
++ node order: recurrent neighbours RN (Linhares 2017)
-- node order: community-based node ordering CNO (Linhares 2019)
-- temporal activity map
-- list of adjacency matrices (clustered)

Evaluation

-- stability: aggregated plot changes slightly when changing the start timestamp
   (check if stabilised with strong aggregation)
-- aesthetic metrics
   #line crossings
   line wiggling
   space efficiency
-- scalability metrics
   #time frames
   #agents
-- community-detection metrics (tbd)
   bundle crossings
